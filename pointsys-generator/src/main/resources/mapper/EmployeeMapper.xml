<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cloud.ssm.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="org.cloud.ssm.entity.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="department" jdbcType="INTEGER" property="department" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, address, age, department, salary, tel
  </sql>
  <select id="selectByExample" parameterType="org.cloud.ssm.entity.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp (id, name, address, 
      age, department, salary, 
      tel)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="tel != null">
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      department = #{department,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into t_emp
    (id, name, address, age, department, salary, tel)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.age,jdbcType=INTEGER}, #{item.department,jdbcType=INTEGER}, #{item.salary,jdbcType=INTEGER}, #{item.tel,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <resultMap id="BaseResultMap" type="org.cloud.ssm.entity.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="department" jdbcType="INTEGER" property="department" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, address, age, department, salary, tel
  </sql>
  <select id="selectByExample" parameterType="org.cloud.ssm.entity.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="forUpdate != null">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp (id, name, address, 
      age, department, salary, 
      tel)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="tel != null">
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      department = #{department,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.cloud.ssm.entity.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="department" jdbcType="INTEGER" property="department" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, address, age, department, salary, tel
  </sql>
  <select id="selectByExample" parameterType="org.cloud.ssm.entity.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="forUpdate != null">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp (id, name, address, 
      age, department, salary, 
      tel)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.cloud.ssm.entity.Employee">
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="tel != null">
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cloud.ssm.entity.Employee">
    update t_emp
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      department = #{department,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>